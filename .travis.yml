matrix:
  include:
    - name: linux_3_7
      if: tag IS blank
      os: linux
      language: python
      env: MINICONDA="https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh" PYTHONVER="3.7" PYIRONVER="0.2.11"
      install:
        - export PATH="$HOME/miniconda/bin:$PATH"
        - wget ${MINICONDA} -O miniconda.sh
        - bash miniconda.sh -b -p $HOME/miniconda
        - conda info -a
        - conda config --set always_yes yes --set changeps1 no
        - conda update -q conda
        - conda install -y -c conda-forge python=${PYTHONVER} constructor
      script:
        - mkdir build
        - constructor -v --output-dir=build --platform="linux-64" constructor
        - git tag ${PYIRONVER}
      deploy:
        - provider: releases
          api_key: $GH_TOKEN
          file: "build/pyiron-${PYIRONVER}_build-${PYIRONVER}-Linux-x86_64.sh"
          skip_cleanup: true
          on:
            branch: master
    - name: osx_3_7
      if: tag IS blank
      os: osx
      language: generic
      env: MINICONDA="https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh" PYTHONVER="3.7" PYIRONVER="0.2.11"
      install:
        - export PATH="$HOME/miniconda/bin:$PATH"
        - wget ${MINICONDA} -O miniconda.sh
        - bash miniconda.sh -b -p $HOME/miniconda
        - conda info -a
        - conda config --set always_yes yes --set changeps1 no
        - conda update -q conda
        - conda install -y -c conda-forge python=${PYTHONVER} constructor
      script:
        - mkdir build
        - constructor -v --output-dir=build --platform="osx-64" constructor
        - git tag ${PYIRONVER}
      deploy:
        - provider: releases
          api_key: $GH_TOKEN
          file: "build/pyiron-${PYIRONVER}_build-${PYIRONVER}-MacOSX-x86_64.pkg"
          skip_cleanup: true
          on:
            branch: master
